<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Roger's blpg</title><link>https://shawroger.github.io</link><description>Nothing to say but everything in mind</description><copyright>Roger's blpg</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://pic.imgdb.cn/item/6673912cd9c307b7e9f638dc.jpg</url><title>avatar</title><link>https://shawroger.github.io</link></image><lastBuildDate>Thu, 20 Jun 2024 02:37:07 +0000</lastBuildDate><managingEditor>Roger's blpg</managingEditor><ttl>60</ttl><webMaster>Roger's blpg</webMaster><item><title>代码实现：pandas 读取 mat 的文件中结构体数组</title><link>https://shawroger.github.io/post/dai-ma-shi-xian-%EF%BC%9Apandas%20-du-qu-%20mat%20-de-wen-jian-zhong-jie-gou-ti-shu-zu.html</link><description># 引入 python 库&#13;
&#13;
```python&#13;
import scipy.io&#13;
import numpy as np&#13;
import pandas as pd&#13;
```&#13;
&#13;
# 函数实现&#13;
&#13;
假设 mat 文件中有一个结构体数组的数据名为 `data`&#13;
&#13;
```python&#13;
&#13;
def create_pd(matValue):&#13;
    # 初始化一个字典来存储数据&#13;
    data_dict = {}&#13;
    &#13;
    # 提取所有字段名&#13;
    field_names = matValue.dtype.names&#13;
    &#13;
    # 初始化字典的键&#13;
    for field in field_names:&#13;
        data_dict[field] = []&#13;
    &#13;
    # 解析结构体数组并提取数据&#13;
    for i in range(matValue.shape[0]):&#13;
        # 获取第 i 个结构体&#13;
        struct = matValue[i, 0]&#13;
        &#13;
        # 提取每个字段的值&#13;
        for field in field_names:&#13;
            value = struct[field]&#13;
            # 如果值是数组，展开它&#13;
            if isinstance(value, np.ndarray) and value.size == 1:&#13;
                value = value[0, 0] if value.shape[0] == 1 else value.flatten()&#13;
            &#13;
            data_dict[field].append(value)&#13;
    &#13;
    # 将字典转换为 DataFrame&#13;
    df = pd.DataFrame(data_dict)&#13;
    &#13;
    # 显示 DataFrame&#13;
    return df&#13;
&#13;
def load_struct_mat(mat_file , valueKey = 'data'):&#13;
    mat = scipy.io.loadmat(mat_file + '.mat')&#13;
    list = create_pd(mat[valueKey])&#13;
    return list&#13;
```&#13;
&#13;
# 使用方法&#13;
&#13;
```python&#13;
df = load_struct_mat('data.mat', 'data')&#13;
# df 的类型就是 pandas.DataFrame&#13;
df.to_csv('data.csv', index = False)&#13;
```。</description><guid isPermaLink="true">https://shawroger.github.io/post/dai-ma-shi-xian-%EF%BC%9Apandas%20-du-qu-%20mat%20-de-wen-jian-zhong-jie-gou-ti-shu-zu.html</guid><pubDate>Thu, 20 Jun 2024 02:36:36 +0000</pubDate></item><item><title>微信解封方法</title><link>https://shawroger.github.io/post/wei-xin-jie-feng-fang-fa.html</link><description>先去钱包那里绑定一个你的实名银行卡，然后用这个银行卡的个人信息来注册实名认证填写身份证信息和扫脸认证都用这个卡的实名信息就可以了。</description><guid isPermaLink="true">https://shawroger.github.io/post/wei-xin-jie-feng-fang-fa.html</guid><pubDate>Thu, 20 Jun 2024 02:16:08 +0000</pubDate></item></channel></rss>