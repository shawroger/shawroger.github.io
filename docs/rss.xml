<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Roger's new blog</title><link>https://shawroger.github.io</link><description>Nothing to say but everything in mind</description><copyright>Roger's new blog</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://pic.imgdb.cn/item/6673912cd9c307b7e9f638dc.jpg</url><title>avatar</title><link>https://shawroger.github.io</link></image><lastBuildDate>Sat, 22 Jun 2024 02:38:40 +0000</lastBuildDate><managingEditor>Roger's new blog</managingEditor><ttl>60</ttl><webMaster>Roger's new blog</webMaster><item><title>王者荣耀随机乱放技能的人机 Autohotkey 脚本</title><link>https://shawroger.github.io/post/wang-zhe-rong-yao-sui-ji-luan-fang-ji-neng-de-ren-ji-%20Autohotkey%20-jiao-ben.html</link><description>代码呈上，注释明确不多说，按下 ESC 退出脚本&#13;
&#13;
```autohotkey&#13;
; 定义轮盘位置&#13;
x := 586  ; 设置目标位置的 x 坐标&#13;
y := 919  ; 设置目标位置的 y 坐标&#13;
&#13;
; 创建一个热键来退出循环&#13;
Esc::ExitApp&#13;
&#13;
; 无限循环&#13;
Loop {&#13;
	; 生产轮盘随机移动偏移度&#13;
	delta_x := Random(-100, 100)&#13;
	delta_y := Random(-100, 100)&#13;
	&#13;
	; 随机普通攻击次数&#13;
	clickCount := Random(1, 6)&#13;
	&#13;
	; 移动持续时间&#13;
	moving_time := 0&#13;
	if (delta_x*delta_y &lt; 0) {&#13;
		moving_time := Random(500, 1000)&#13;
	} else if (delta_x &lt;= 0 &amp;&amp; delta_y &lt;= 0) {&#13;
		moving_time := Random(200, 500)&#13;
	} else {&#13;
		moving_time := Random(2000, 5000)&#13;
	}&#13;
	&#13;
	;; 移动英雄&#13;
	; 初始化鼠标位置到轮盘处&#13;
    	MouseMove(x, y, 0)&#13;
    	; 按下左键并保持&#13;
    	Click('L Down')&#13;
    	; 移动鼠标到指定位置&#13;
    	MouseMove(x+delta_x, y-delta_y)&#13;
    	; 休眠一段时间，防止 CPU 占用过高&#13;
    	Sleep(moving_time)&#13;
    	; 松开左键&#13;
    	Click('L Up')&#13;
	&#13;
	; 三技能升级&#13;
	MouseMove(2089,992, 0)&#13;
	Click('L')&#13;
	&#13;
	; 二技能升级&#13;
	MouseMove(1785,709, 0)&#13;
	Click('L')&#13;
	&#13;
	; 一技能升级&#13;
	MouseMove(1677,910, 0)&#13;
	Click('L')&#13;
	&#13;
	; 买装备&#13;
	MouseMove(433,499, 0)&#13;
	Click('L')&#13;
	&#13;
	; 召唤师技能，如：惩戒&#13;
	MouseMove(1592,1030, 0)&#13;
	Click('L')&#13;
	&#13;
	; 恢复&#13;
	MouseMove(1445,1032, 0)&#13;
	Click('L')&#13;
	&#13;
	; 三技能施法&#13;
	MouseMove(2074,721, 0)&#13;
	Click('L')&#13;
	&#13;
	; 二技能施法&#13;
	MouseMove(1906,838, 0)&#13;
	Click('L')&#13;
	&#13;
	; 一技能施法&#13;
	MouseMove(1779,1028, 0)&#13;
	Click('L')&#13;
	&#13;
	; 普通攻击&#13;
	MouseMove(2109,1002, 0)&#13;
	Loop clickCount {&#13;
		Click('L')&#13;
		Sleep(10)  ; 每次点击后等待 10 毫秒&#13;
	}&#13;
}&#13;
&#13;
&#13;
```。</description><guid isPermaLink="true">https://shawroger.github.io/post/wang-zhe-rong-yao-sui-ji-luan-fang-ji-neng-de-ren-ji-%20Autohotkey%20-jiao-ben.html</guid><pubDate>Sat, 22 Jun 2024 02:38:17 +0000</pubDate></item><item><title>代码实现：pandas 读取 mat 的文件中结构体数组</title><link>https://shawroger.github.io/post/dai-ma-shi-xian-%EF%BC%9Apandas%20-du-qu-%20mat%20-de-wen-jian-zhong-jie-gou-ti-shu-zu.html</link><description># 引入 python 库&#13;
&#13;
```python&#13;
import scipy.io&#13;
import numpy as np&#13;
import pandas as pd&#13;
```&#13;
&#13;
# 函数实现&#13;
&#13;
假设 mat 文件中有一个结构体数组的数据名为 `data`&#13;
&#13;
```python&#13;
&#13;
def create_pd(matValue):&#13;
    # 初始化一个字典来存储数据&#13;
    data_dict = {}&#13;
    &#13;
    # 提取所有字段名&#13;
    field_names = matValue.dtype.names&#13;
    &#13;
    # 初始化字典的键&#13;
    for field in field_names:&#13;
        data_dict[field] = []&#13;
    &#13;
    # 解析结构体数组并提取数据&#13;
    for i in range(matValue.shape[0]):&#13;
        # 获取第 i 个结构体&#13;
        struct = matValue[i, 0]&#13;
        &#13;
        # 提取每个字段的值&#13;
        for field in field_names:&#13;
            value = struct[field]&#13;
            # 如果值是数组，展开它&#13;
            if isinstance(value, np.ndarray) and value.size == 1:&#13;
                value = value[0, 0] if value.shape[0] == 1 else value.flatten()&#13;
            &#13;
            data_dict[field].append(value)&#13;
    &#13;
    # 将字典转换为 DataFrame&#13;
    df = pd.DataFrame(data_dict)&#13;
    &#13;
    # 显示 DataFrame&#13;
    return df&#13;
&#13;
def load_struct_mat(mat_file , valueKey = 'data'):&#13;
    mat = scipy.io.loadmat(mat_file + '.mat')&#13;
    list = create_pd(mat[valueKey])&#13;
    return list&#13;
```&#13;
&#13;
# 使用方法&#13;
&#13;
```python&#13;
df = load_struct_mat('data.mat', 'data')&#13;
# df 的类型就是 pandas.DataFrame&#13;
df.to_csv('data.csv', index = False)&#13;
```。</description><guid isPermaLink="true">https://shawroger.github.io/post/dai-ma-shi-xian-%EF%BC%9Apandas%20-du-qu-%20mat%20-de-wen-jian-zhong-jie-gou-ti-shu-zu.html</guid><pubDate>Thu, 20 Jun 2024 02:36:36 +0000</pubDate></item><item><title>微信解封方法</title><link>https://shawroger.github.io/post/wei-xin-jie-feng-fang-fa.html</link><description>先去钱包那里绑定一个你的实名银行卡，然后用这个银行卡的个人信息来注册实名认证填写身份证信息和扫脸认证都用这个卡的实名信息就可以了。</description><guid isPermaLink="true">https://shawroger.github.io/post/wei-xin-jie-feng-fang-fa.html</guid><pubDate>Thu, 20 Jun 2024 02:16:08 +0000</pubDate></item></channel></rss>